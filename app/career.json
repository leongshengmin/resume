{
    "events": [
        {
            "start_date": {
                "year": "2021",
                "month": "8"
            },
            "media": {
                "url": "https://cdn.freebiesupply.com/logos/large/2x/grab-logo-png-transparent.png",
                "credit": "Grab"
            },
            "text": {
                "headline": "Senior Software Engineer (Observability Team)",
                "text": "<strong>PIC for Grab’s logging stack – Manage >1PiB Opensearch clusters and logging pipeline.</strong><br>\t● (Cost Savings) Responsible for managing the logging stack’s budgeting and internal unit cost. Involves routinely looking for cost savings opportunities, evaluating the cost breakdown for projects.<br>\t● (Service Reliability) Responsible for ensuring logging stack’s SLAs are met. Involves setting up monitoring and testing to ensure platform stability.<br><br><strong>Projects</strong><br>● (Service Reliability) Added synthetic testing to the logging pipeline to measure indexing, query latencies and data completeness of archived and real-time logs to verify data reliability from service teams’ perspective. SLAs are defined based on these SLI metrics.<br>● (Service Reliability) Setup AWS Playground subaccount replicating the existing production subaccount setup with the ability to multiplex live logs or replay old logs for testing. Involves setting up a pipeline to upload ansible build artifacts and deploying via ansible push onto the test environment.<br>● (Service Reliability) Added log buffering layer in Azure to improve reliability of logs sent cross-cloud from Azure to AWS.<br>● (Service Reliability) Identified and fixed performance bottlenecks e.g. created Opensearch query WAF to prevent expensive queries on the cluster which allowed us to open the cluster for programmatic querying and reduced p95 query latencies by >50%, optimized LDAP authorization flow in the security plugin which reduced p95 Kibana login time by >50%.<br>● (Cost Savings) Identified and drove cost savings initiatives e.g. enabled Kafka rack awareness which reduced cross-AZ costs by 50%, switched Opensearch, Logstash to Graviton-based workloads which reduced total cluster costs by ~20%.<br>● (Misc) Migrated >1PiB logging clusters from Elasticsearch + Opendistro to Opensearch without downtime due to Opendistro EOL. This involved planning, budgeting and executing.<br>● (Misc) PIC for migrating tenant organization from GCP to AWS in a new region. This involved architecting, evaluating costs for supporting logs streamed from multiple AWS regions and executing.<br>● (Misc) Setup log archiving pipeline to sink logs into S3 for longer retention. Also setup self-serve backfilling pipeline for engineers to rehydrate logs into Opensearch from S3 log archives for adhoc log exploration.<br>● (Misc) Developed self-serve pipeline for engineers to create metrics and monitors from logs. Also setup common log monitors to capture critical events that may not be caught by metrics. This includes automatically created log dashboards and alerting to facilitate investigation of alert cause.<br>● (Misc) Manage logging agents on VMs and K8S. This involves maintaining the ansible roles / helm charts for the respective logging agents.<br>● (Misc) Setup automation to update AMIs for stateless and stateful workloads to reduce toil from CVE tickets. This involves setting up scheduled AMI builds, automatically verifying and applying Terraform plans to update referenced AMIs and gracefully rotating instances with older AMIs out.<br>"
            }
        },
        {
            "start_date": {
                "year": "2021",
                "month": "1"
            },
            "media": {
                "url": "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Shopee.svg/1280px-Shopee.svg.png",
                "credit": "Shopee"
            },
            "text": {
                "headline": "Backend Software Engineer Intern (Payments Team)",
                "text": "<ul><li>Instrumented service with Prometheus metrics to trace performance bottlenecks.</li><li>Developed pre-deployment validation for stored credentials of partner APIs</li>"
            }
        },
        {
            "start_date": {
                "year": "2020",
                "month": "4"
            },
            "media": {
                "url": "https://1000logos.net/wp-content/uploads/2022/08/Ninja-Van-Logo.png",
                "credit": "Ninja Van"
            },
            "text": {
                "headline": "Full Stack Software Engineer Intern (Drivers Team)",
                "text": "Designed and built a 2-way cross-platform messaging system for communication during parcel delivery."
            }
        },
        {
            "start_date": {
                "year": "2019",
                "month": "8"
            },
            "media": {
                "url": "https://securitysenses.com/sites/default/files/logos/upguard-logo.png",
                "credit": "UpGuard"
            },
            "text": {
                "headline": "DevOps / SRE Intern",
                "text": "<ul><li>Developed release package upload tool for Forward Deploy Engineers to install packages on customers' VMs</li><li>Oversaw Nginx version upgrade and configurations for enabling Modsecurity WAF</li>"
            }
        },
        {
            "start_date": {
                "year": "2019",
                "month": "5"
            },
            "media": {
                "url": "https://1000logos.net/wp-content/uploads/2022/08/Ninja-Van-Logo.png",
                "credit": "Ninja Van"
            },
            "text": {
                "headline": "Backend Software Engineer Intern (Shippers Team)",
                "text": "Developed a webhook history tool to allow tracking and searching of fired webhooks."
            }
        }
    ]
}